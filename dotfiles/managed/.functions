print_brew_content() {
  echo -e "
Installed Homebrew Packages:
----------------------------"
  brew leaves

  echo -e "
Installed Homebrew Casks:
-------------------------"
  brew list --cask
}

##############################################
#                 Utilities
##############################################
# Create a new directory and cd into it
mkd() {
  mkdir -p "$@"
  cd "$@" || exit
}

# Determine size of a file or total size of a directory
fs() {
  if du -b /dev/null >/dev/null 2>&1; then
    local arg=-sbh
  else
    local arg=-sh
  fi
  # shellcheck disable=SC2199
  if [[ -n "$@" ]]; then
    du ${arg} -- "$@"
  else
    du ${arg} -- .[^.]* *
  fi
}

# bkr ./some_script.sh # some_script.sh is now running in the background
bkr() {
  (nohup "$@" &>/dev/null &)
}

##############################################
#                   IDEs
##############################################


##############################################
#                  DOCKER
##############################################
docker_remove_dangling_intermediate_images() {
  #  local danglingImages=$(docker images | grep "<none>" | awk {'print $3'})
  local danglingImages=$(docker images -f "dangling=true" -q)
  if [[ ! -z "${danglingImages}" ]]; then
    echo "Removing dangling intermediate <none> images..."
    docker rmi -f ${danglingImages}
  fi
}

docker_remove_stopped_containers() {
  docker container prune -f
}
